<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ssm.dao.RecruitMapper">
  <resultMap id="BaseResultMap" type="cn.ssm.model.Recruit" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="industry" property="industry" jdbcType="VARCHAR" />
    <result column="nature" property="nature" jdbcType="VARCHAR" />
    <result column="company_size" property="companySize" jdbcType="VARCHAR" />
    <result column="company_profile" property="companyProfile" jdbcType="VARCHAR" />
    <result column="contacts" property="contacts" jdbcType="VARCHAR" />
    <result column="recruitment_telephone" property="recruitmentTelephone" jdbcType="VARCHAR" />
    <result column="company_address" property="companyAddress" jdbcType="VARCHAR" />
    <result column="u_id" property="uId" jdbcType="BIGINT" />
  </resultMap>

  <!--招聘公司对用户多对一的resultMap-->



  <resultMap type="Recruit" id="userMap" extends="BaseResultMap">
  <association property="users" javaType="cn.ssm.model.User">
   <id property="id" jdbcType="BIGINT" column="id" javaType="java.lang.Long"/>
    <result property="login_name" jdbcType="VARCHAR" column="login_name" javaType="java.lang.String"/>
    <result property="password" jdbcType="VARCHAR" column="password" javaType="java.lang.String"/>
    <result property="email" jdbcType="VARCHAR" column="email" javaType="java.lang.String"/>
    <result property="gender" jdbcType="VARCHAR" column="gender" javaType="java.lang.String"/>
    <result property="name" jdbcType="VARCHAR" column="name" javaType="java.lang.String"/>
    <result property="phoneNumber" jdbcType="VARCHAR" column="phone_number" javaType="java.lang.String"/>
    <result property="age" jdbcType="VARCHAR" column="age" javaType="java.lang.String"/>
  </association>
</resultMap>

  <!--招聘公司对简历多对多的resultMap-->
  <resultMap type="Recruit" id="recruitResumeMap" extends="BaseResultMap">
  <collection property="resumes" ofType="cn.ssm.model.Resume">
  <id property="id" jdbcType="BIGINT" column="id" javaType="java.lang.Long"/>
  <result property="title" jdbcType="VARCHAR" column="title" javaType="java.lang.String"/>
  <result property="jobCategory" jdbcType="VARCHAR" column="job_category" javaType="java.lang.String"/>
  <result property="workPlace" jdbcType="VARCHAR" column="work_place" javaType="java.lang.String"/>
  <result property="salaryExpectation" jdbcType="VARCHAR" column="salary_expectation" javaType="java.lang.String"/>
  <result property="name" jdbcType="VARCHAR" column="name" javaType="java.lang.String"/>
  <result property="gender" jdbcType="VARCHAR" column="gender" javaType="java.lang.String"/>
  <result property="workingLife" jdbcType="VARCHAR" column="wor.king_life" javaType="java.lang.String"/>
  <result property="highestDegree" jdbcType="VARCHAR" column="highest_degree" javaType="java.lang.String"/>
  <result property="phoneNumber" jdbcType="VARCHAR" column="phone_number" javaType="java.lang.String"/>
</collection>
</resultMap>


  <select id="findRecruitResume" resultMap="recruitResumeMap" parameterType="long"> SELECT recruit.id , recruit.name, resume.id, resume.title resume.jobCategory AS resume.job_category resume.workPlace AS work_place resume.salaryExpectation AS resume.salary_expectation resume.name resume.gender resume.workingLife AS resume.working_life resume.highestDegree AS highest_degree resume.phoneNumbe AS phone_number ress.resId AS ress.res_id FROM ssm_recruit AS recruit left join ssm_resumement AS ress on recruit.id= ress.recId left join ssm_resume AS resume on ress.resId = resume.id where recruit.id = #{id} </select>

  <select id="getRecListByUid" resultMap="BaseResultMap" parameterType="cn.ssm.model.User"> SELECT * FROM ssm_recruit WHERE u_id=#{id} </select>

  <update id="updateRecruit" parameterType="cn.ssm.model.Recruit">
  UPDATE ssm_recruit

  SET
  name = #{name},
  industry = #{industry},
  nature = #{nature},
  company_size = #{companySize},
  company_profile = #{companyProfile},
  contacts = #{contacts} ,
  recruitment_telephone = #{recruitmentTelephone} ,
  company_address = #{companyAddress}

  WHERE id = #{id};
</update>

</mapper>